services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    # environment:
    #   - name=value
      # context: .
    environment:
      NODE_ENV: production
    depends_on:
      - db
  frontend:
    build: ./frontend
    ports:
      - "4173:4173"
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8000
    depends_on:
      - backend
  
  db:
    image: capstone_db
    container_name: capstone_db_container
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=ab
      - POSTGRES_DB=capstone_db
    volumes:
      - db-data:/var/lib/postgresql/data
    stdin_open: true
    tty: true
volumes:
  db-data:
# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.

